<div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-800">Adicionar Novo Colaborador</h1>
        <p class="mt-2 text-sm text-gray-600">Preencha os dados abaixo. Será criada uma senha provisória que o colaborador deverá alterar no primeiro login.</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200">
        <form action="/admin/colaboradores" method="POST" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div><label for="first_name" class="form-label">Nome</label><input type="text" name="first_name" id="first_name" class="form-input" required></div>
                <div><label for="last_name" class="form-label">Apelido</label><input type="text" name="last_name" id="last_name" class="form-input" required></div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                 <div><label for="username" class="form-label">Nome de Usuário</label><input type="text" name="username" id="username" class="form-input" required></div>
                <div><label for="email" class="form-label">Email</label><input type="email" name="email" id="email" class="form-input" required></div>
            </div>
            <div>
                <label for="password" class="form-label">Senha Provisória</label>
                <input type="password" name="password" id="password" class="form-input" required>
            </div>
            <hr class="my-4 border-t border-gray-200">
            <h2 class="text-lg font-semibold text-gray-700">Detalhes do Perfil</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="setor_id" class="form-label">Setor</label>
                    <div class="flex items-center space-x-2">
                        <select id="setor_id" name="setor_id" class="form-input flex-grow">
                            <% setores.forEach(setor => { %><option value="<%= setor.id %>"><%= setor.nome %></option><% }) %>
                        </select>
                        <button id="btn-add-setor" type="button" class="btn-secondary !py-2 !px-3" title="Adicionar novo setor">+</button>
                    </div>
                </div>
                <div>
                    <label for="gerente" class="form-label">Tipo de Perfil</label>
                    <div class="flex items-center space-x-2">
                        <select id="gerente" name="gerente" class="form-input flex-grow">
                            <option value="false">Colaborador</option>
                            <option value="true">Gerente</option>
                        </select>
                        <button id="btn-gerir-perfis" type="button" class="btn-secondary !py-2 !px-3" title="Gerenciar perfis de gerente">+</button>
                    </div>
                </div>
            </div>
             <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div><label for="ch_primeira" class="form-label">Entrada do turno</label><input type="time" name="ch_primeira" id="ch_primeira" class="form-input" value="09:00" required></div>
                <div><label for="ch_segunda" class="form-label">Saída do turno</label><input type="time" name="ch_segunda" id="ch_segunda" class="form-input" value="18:00" required></div>
            </div>
            <div class="flex justify-end pt-4 space-x-3">
                <a href="/admin/colaboradores" class="btn-secondary">Cancelar</a>
                <button type="submit" class="btn-primary">Criar Colaborador</button>
            </div>
        </form>
    </div>
</div>

<%- include('../partials/modal-novo-setor') %>
<%- include('../partials/modal-gerir-perfis') %>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Função auxiliar para adicionar "escutadores" de eventos de forma segura
    const safelyAttachListener = (elementId, event, handler) => {
        const element = document.getElementById(elementId);
        if (element) {
            element.addEventListener(event, handler);
        } else {
            // Este aviso aparecerá na consola se um ID não for encontrado, ajudando a depurar
            console.warn(`Aviso: Elemento com o id "${elementId}" não foi encontrado no HTML.`);
        }
    };

    // --- LÓGICA DO MODAL DE NOVO SETOR ---
    const modalNovoSetor = document.getElementById('modal-novo-setor');
    const inputNomeSetor = document.getElementById('nome-novo-setor');
    const feedbackSetorDiv = document.getElementById('modal-setor-feedback');
    const selectSetorPrincipal = document.getElementById('setor_id');

    const openSetorModal = () => {
        if (!modalNovoSetor || !inputNomeSetor || !feedbackSetorDiv) return;
        inputNomeSetor.value = '';
        feedbackSetorDiv.textContent = '';
        modalNovoSetor.classList.remove('hidden');
    };
    const closeSetorModal = () => {
        if (modalNovoSetor) modalNovoSetor.classList.add('hidden');
    };
    const handleSetorSubmit = async (e) => {
        e.preventDefault();
        const nomeSetor = inputNomeSetor.value.trim();
        if (!nomeSetor) {
            feedbackSetorDiv.textContent = 'O nome do setor é obrigatório.';
            return;
        }
        feedbackSetorDiv.textContent = 'A salvar...';
        try {
            const response = await fetch('/api/v1/departments', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ nome: nomeSetor })
            });
            const result = await response.json();
            if (!response.ok) throw new Error(result.error || 'Falha ao criar o setor');
            
            const newOption = document.createElement('option');
            newOption.value = result.department.id;
            newOption.textContent = result.department.nome;
            selectSetorPrincipal.appendChild(newOption);
            newOption.selected = true;
            closeSetorModal();
        } catch (error) {
            feedbackSetorDiv.textContent = `Erro: ${error.message}`;
        }
    };

    // --- LÓGICA DO MODAL DE PERFIS ---
    const modalPerfis = document.getElementById('modal-perfis');
    const listaPerfisTbody = document.getElementById('lista-perfis');
    const feedbackPerfisDiv = document.getElementById('modal-perfis-feedback');

    const fetchAndRenderProfiles = async () => {
        if (!listaPerfisTbody) return;
        listaPerfisTbody.innerHTML = '<tr><td colspan="3" class="text-center">A carregar...</td></tr>';
        try {
            const response = await fetch('/api/v1/profiles');
            const result = await response.json();
            if (!response.ok) throw new Error(result.error || 'Falha ao buscar perfis');
            
            listaPerfisTbody.innerHTML = '';
            if (result.profiles.length === 0) {
                listaPerfisTbody.innerHTML = '<tr><td colspan="3" class="text-center">Nenhum perfil encontrado.</td></tr>';
            } else {
                result.profiles.forEach(profile => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td class="table-cell">${profile.nome}</td>
                        <td class="table-cell">${profile.setor_nome || 'N/A'}</td>
                        <td class="table-cell text-center">
                            <button data-id="${profile.id}" data-gerente="${profile.gerente}" class="toggle-gerente-btn btn-${profile.gerente ? 'danger' : 'primary'} text-sm">
                                ${profile.gerente ? 'Despromover' : 'Promover'}
                            </button>
                        </td>`;
                    listaPerfisTbody.appendChild(row);
                });
            }
        } catch (error) {
            listaPerfisTbody.innerHTML = `<tr><td colspan="3" class="text-center text-red-600">${error.message}</td></tr>`;
        }
    };
    const openPerfisModal = () => {
        if (modalPerfis) {
            modalPerfis.classList.remove('hidden');
            fetchAndRenderProfiles();
        }
    };
    const closePerfisModal = () => {
        if (modalPerfis) modalPerfis.classList.add('hidden');
    };
    const handleProfileListClick = async (e) => {
        if (e.target.classList.contains('toggle-gerente-btn')) {
            const button = e.target;
            const profileId = button.dataset.id;
            const newStatus = !(button.dataset.gerente === 'true');
            
            feedbackPerfisDiv.textContent = 'A atualizar...';
            try {
                const response = await fetch(`/api/v1/profiles/${profileId}/role`, {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ gerente: newStatus })
                });
                const result = await response.json();
                if (!response.ok) throw new Error(result.error || 'Falha ao atualizar perfil');
                
                feedbackPerfisDiv.textContent = 'Status de gerente atualizado com sucesso!';
                fetchAndRenderProfiles();
            } catch (error) {
                feedbackPerfisDiv.textContent = `Erro: ${error.message}`;
            }
        }
    };

    // --- ANEXAR TODOS OS EVENTOS DE FORMA SEGURA ---
    // Modal de Setor
    safelyAttachListener('btn-add-setor', 'click', openSetorModal);
    safelyAttachListener('close-modal-setor', 'click', closeSetorModal);
    safelyAttachListener('cancel-modal-setor', 'click', closeSetorModal);
    safelyAttachListener('form-novo-setor', 'submit', handleSetorSubmit);

    // Modal de Perfis
    safelyAttachListener('btn-gerir-perfis', 'click', openPerfisModal);
    safelyAttachListener('close-modal-perfis', 'click', closePerfisModal);
    safelyAttachListener('cancel-modal-perfis', 'click', closePerfisModal);
    safelyAttachListener('lista-perfis', 'click', handleProfileListClick);
});

</script>