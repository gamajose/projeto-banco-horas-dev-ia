<div class="page-header">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
            <h1 class="page-title">
                <i class="fas fa-clipboard-check text-red-600 mr-3"></i>
                Solicitações Pendentes
            </h1>
            <p class="page-description">Aprovações que necessitam de sua análise.</p>
        </div>
        <div class="mt-4 sm:mt-0">
            <button id="approve-all-pending-btn" class="btn-success btn-sm">
                <i class="fas fa-check-double mr-2"></i>
                Aprovar Todas
            </button>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body p-0">
        <div class="table-container">
            <table class="min-w-full">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="table-header">Colaborador</th>
                        <th class="table-header hidden sm:table-cell">Setor</th>
                        <th class="table-header">Data/Hora</th>
                        <th class="table-header">Tipo</th>
                        <th class="table-header text-right">Ações</th>
                    </tr>
                </thead>
                <tbody id="solicitacoes-tbody">
                    <% if (solicitacoes && solicitacoes.length> 0) { %>
                        <% solicitacoes.forEach(mov=> { %>
                            <tr id="mov-row-<%= mov.id %>" class="table-row">
                                <td class="table-cell">
                                    <div class="flex items-center space-x-3">
                                        <img src="<%= mov.foto_url || '/images/default-avatar.png' %>"
                                            alt="<%= mov.colaborador_nome %>" class="w-8 h-8 rounded-full object-cover">
                                        <div>
                                            <div class="font-semibold text-gray-900">
                                                <%= mov.colaborador_nome %>
                                            </div>
                                            <div class="text-sm text-gray-500 sm:hidden">
                                                <%= mov.setor_nome %>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="table-cell hidden sm:table-cell">
                                    <span class="badge badge-info">
                                        <%= mov.setor_nome %>
                                    </span>
                                </td>
                                <td class="table-cell">
                                    <div class="text-sm">
                                        <div class="font-medium">
                                            <%= new Date(mov.data_movimentacao).toLocaleDateString('pt-BR',
                                                {timeZone: 'UTC' }) %>
                                        </div>
                                        <div class="text-gray-500">
                                            <%= mov.hora_total %>
                                        </div>
                                    </div>
                                </td>
                                <td class="table-cell">
                                    <span class="badge <%= mov.entrada ? 'badge-success' : 'badge-danger' %>">
                                        <i class="fas fa-<%= mov.entrada ? 'sign-in-alt' : 'sign-out-alt' %> mr-1"></i>
                                        <%= mov.entrada ? 'Entrada' : 'Saída' %>
                                    </span>
                                </td>
                                <td class="table-cell text-right">
                                    <div class="flex items-center justify-end space-x-2">
                                        <button class="btn-success btn-xs btn-approve" data-id="<%= mov.id %>"
                                            title="Aprovar">
                                            <i class="fas fa-check"></i>
                                        </button>
                                        <button class="btn-danger btn-xs btn-reject" data-id="<%= mov.id %>"
                                            title="Rejeitar">
                                            <i class="fas fa-times"></i>
                                        </button>
                                        <button class="btn-secondary btn-xs"
                                            onclick="viewMovementDetails('<%= mov.id %>')" title="Detalhes">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5" class="table-cell text-center py-12">
                                            <div class="text-gray-400">
                                                <i class="fas fa-check-circle text-4xl mb-4"></i>
                                                <p class="text-lg font-medium">Nenhuma solicitação pendente</p>
                                                <p class="text-sm">Todas as aprovações estão em dia!</p>
                                            </div>
                                        </td>
                                    </tr>
                                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div id="confirm-approve-all-modal"
    class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white p-8 rounded-2xl shadow-xl w-11/12 max-w-sm text-center">
        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-16 w-16 rounded-full bg-yellow-100">
            <i class="fas fa-exclamation-triangle text-3xl text-yellow-500"></i>
        </div>
        <div class="mt-4">
            <h3 class="text-lg font-bold text-gray-900">Aprovar Todas as Solicitações?</h3>
            <p class="mt-2 text-sm text-gray-500">
                Tem certeza que deseja aprovar todas as solicitações pendentes de uma só vez?
            </p>
        </div>
        <div class="mt-6 flex justify-center space-x-4">
            <button id="btn-cancelar-aprovacao-massa" class="btn-secondary">
                Cancelar
            </button>
            <button id="btn-confirmar-aprovacao-massa" class="btn-success">
                Confirmar
            </button>
        </div>
    </div>
</div>

<div id="confirm-approve-modal"
    class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white p-8 rounded-2xl shadow-xl w-11/12 max-w-sm text-center">
        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-16 w-16 rounded-full bg-emerald-100">
            <i class="fas fa-check-circle text-3xl text-emerald-500"></i>
        </div>
        <div class="mt-4">
            <h3 class="text-lg font-bold text-gray-900">Aprovar Solicitação?</h3>
            <p class="mt-2 text-sm text-gray-500">
                Tem certeza que deseja aprovar esta solicitação?
            </p>
        </div>
        <div class="mt-6 flex justify-center space-x-4">
            <button id="btn-cancelar-aprovacao-individual" class="btn-secondary">
                Cancelar
            </button>
            <button id="btn-confirmar-aprovacao-individual" class="btn-success">
                Confirmar
            </button>
        </div>
    </div>
</div>

<div id="confirm-reject-modal"
    class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white p-8 rounded-2xl shadow-xl w-11/12 max-w-sm text-center">
        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-16 w-16 rounded-full bg-red-100">
            <i class="fas fa-times-circle text-3xl text-red-500"></i>
        </div>
        <div class="mt-4">
            <h3 class="text-lg font-bold text-gray-900">Rejeitar Solicitação?</h3>
            <p class="mt-2 text-sm text-gray-500">
                Tem certeza que deseja rejeitar esta solicitação? Esta ação é definitiva.
            </p>
        </div>
        <div class="mt-6 flex justify-center space-x-4">
            <button id="btn-cancelar-rejeicao" class="btn-secondary">
                Cancelar
            </button>
            <button id="btn-confirmar-rejeicao" class="btn-danger">
                Confirmar
            </button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const tabelaSolicitacoes = document.getElementById('solicitacoes-tbody');
        const pendingRequestsTbody = document.getElementById('pending-requests-tbody');

        // Modal de aprovação em massa
        const modalAprovarTodas = document.getElementById('confirm-approve-all-modal');
        const btnAprovarTodas = document.getElementById('approve-all-pending-btn');
        const btnConfirmarAprovarTodas = document.getElementById('btn-confirmar-aprovacao-massa');
        const btnCancelarAprovarTodas = document.getElementById('btn-cancelar-aprovacao-massa');

        // Modais individuais
        const modalAprovar = document.getElementById('confirm-approve-modal');
        const btnConfirmarAprovar = document.getElementById('btn-confirmar-aprovacao-individual');
        const btnCancelarAprovar = document.getElementById('btn-cancelar-aprovacao-individual');

        const modalRejeitar = document.getElementById('confirm-reject-modal');
        const btnConfirmarRejeitar = document.getElementById('btn-confirmar-rejeicao');
        const btnCancelarRejeitar = document.getElementById('btn-cancelar-rejeicao');

        let currentMovementId = null;

        // --- LÓGICA DE EVENTOS DA TABELA ---
        if (tabelaSolicitacoes || pendingRequestsTbody) {
            const container = tabelaSolicitacoes || pendingRequestsTbody;
            container.addEventListener('click', (event) => {
                const target = event.target.closest('button');
                if (!target) return;

                currentMovementId = target.dataset.id;

                if (target.classList.contains('btn-approve')) {
                    modalAprovar.classList.remove('hidden');
                } else if (target.classList.contains('btn-reject')) {
                    modalRejeitar.classList.remove('hidden');
                }
            });
        }
        // Aprovar Todas
        if (btnAprovarTodas) {
            btnAprovarTodas.addEventListener('click', () => {
                modalAprovarTodas.classList.remove('hidden');
            });
        }
        if (btnConfirmarAprovarTodas) {
            btnConfirmarAprovarTodas.addEventListener('click', () => {
                modalAprovarTodas.classList.add('hidden');
                handleApproveAll();
            });
        }
        if (btnCancelarAprovarTodas) {
            btnCancelarAprovarTodas.addEventListener('click', () => {
                modalAprovarTodas.classList.add('hidden');
            });
        }

        // Aprovação Individual
        if (btnConfirmarAprovar) {
            btnConfirmarAprovar.addEventListener('click', () => {
                modalAprovar.classList.add('hidden');
                handleMovementAction('aprovar', currentMovementId);
            });
        }
        if (btnCancelarAprovar) {
            btnCancelarAprovar.addEventListener('click', () => {
                modalAprovar.classList.add('hidden');
            });
        }

        // Rejeição Individual
        if (btnConfirmarRejeitar) {
            btnConfirmarRejeitar.addEventListener('click', () => {
                modalRejeitar.classList.add('hidden');
                handleMovementAction('rejeitar', currentMovementId);
            });
        }
        if (btnCancelarRejeitar) {
            btnCancelarRejeitar.addEventListener('click', () => {
                modalRejeitar.classList.add('hidden');
            });
        }
    });


    // --- FUNÇÕES GLOBAIS DE AÇÃO ---
    async function handleMovementAction(action, movementId) {
        showLoading();

        try {
            const url = `/admin/movimentacoes/${movementId}/${action}`;
            const response = await fetch(url, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' }
            });
            const result = await response.json();

            if (!result.success) {
                throw new Error(result.message || 'Falha ao processar a solicitação.');
            }

            const rowToRemove = document.getElementById(`mov-row-${movementId}`);
            if (rowToRemove) {
                rowToRemove.style.opacity = '0';
                setTimeout(() => rowToRemove.remove(), 300);
            }

            showNotification(`Movimentação ${action === 'aprovar' ? 'aprovada' : 'rejeitada'} com sucesso!`, 'success');

        } catch (error) {
            console.error('Erro:', error);
            showNotification('Não foi possível processar a solicitação.', 'error');
        } finally {
            hideLoading();
        }
    }



    async function handleApproveAll() {
        showLoading();

        try {
            const response = await fetch('/admin/movimentacoes/aprovar-todas', {
                method: 'PATCH'
            });
            const result = await response.json();
            if (result.success) {
                showNotification(`${result.approved} movimentações aprovadas com sucesso!`, 'success');
                location.reload();
            } else {
                throw new Error(result.message);
            }
        } catch (error) {
            showNotification('Erro ao aprovar movimentações: ' + error.message, 'error');
        } finally {
            hideLoading();
        }
    }

    // Funções auxiliares (pode estar em um arquivo js global)
    async function viewMovementDetails(movementId) {
        // Implementar lógica para abrir modal com detalhes
        console.log('Ver detalhes da movimentação:', movementId);
        alert('Funcionalidade de detalhes em desenvolvimento.');
    }
    async function approveAllPending() {
        if (!confirm('Tem certeza que deseja aprovar TODAS as solicitações pendentes?')) {
            return;
        }
        try {
            const response = await fetch('/admin/movimentacoes/aprovar-todas', {
                method: 'PATCH',
            });
            const result = await response.json();
            if (result.success) {
                alert(`${result.approved} movimentações aprovadas com sucesso!`);
                location.reload();
            } else {
                throw new Error(result.message);
            }
        } catch (error) {
            console.error('Erro ao aprovar todas as movimentações:', error);
            alert('Não foi possível processar a solicitação em massa.');
        }
    }

    // As funções `showNotification`, `showLoading`, `hideLoading` e `viewMovementDetails`
    // são assumidas como globais ou definidas em outro lugar (ex: main.js)
    function showNotification(message, type) {
        // Implementação da sua função de notificação
        console.log(`[Notificação ${type}] ${message}`);
        // No seu código real, você pode usar a sua função `showNotification` do `main.js` aqui.
    }

    function showLoading() {
        console.log('Mostrando loading...');
    }

    function hideLoading() {
        console.log('Escondendo loading...');
    }

    function viewMovementDetails(movementId) {
        console.log('Detalhes da movimentação:', movementId);
        // Implementar a lógica para abrir o modal de detalhes, que já discutimos antes.
    }
</script>