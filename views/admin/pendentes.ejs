<div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="sm:flex sm:items-center sm:justify-between mb-8">
        <div>
            <h1 class="text-3xl font-bold text-gray-800">Analisar Solicitações Pendentes</h1>
            <p class="mt-2 text-sm text-gray-600">Aprove ou rejeite as movimentações solicitadas pelos colaboradores.</p>
        </div>
    </div>

    <% if (success_msg && success_msg.length > 0) { %>
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6" role="alert"><p><%= success_msg %></p></div>
    <% } %>
    <% if (error_msg && error_msg.length > 0) { %>
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6" role="alert"><p><%= error_msg %></p></div>
    <% } %>

    <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="table-header">Colaborador</th>
                        <th class="table-header">Setor</th>
                        <th class="table-header">Data</th>
                        <th class="table-header">Horas</th>
                        <th class="table-header">Motivo</th>
                        <th class="table-header text-right">Ações</th>
                    </tr>
                </thead>
                <tbody id="pending-requests-tbody" class="bg-white divide-y divide-gray-200">
                    <% pendingMovements.forEach(mov => { %>
                        <tr id="mov-row-<%= mov.id %>">
                            <td class="table-cell font-medium text-gray-900"><%= mov.colaborador_nome %></td>
                            <td class="table-cell text-gray-500"><%= mov.setor_nome %></td>
                            <td class="table-cell"><%= new Date(mov.data_movimentacao).toLocaleDateString('pt-BR', {timeZone: 'UTC'}) %></td>
                            <td class="table-cell font-mono <%= mov.entrada ? 'text-green-600' : 'text-red-600' %>">
                                <%= mov.entrada ? '+' : '-' %><%= mov.hora_total %>
                            </td>
                            <td class="table-cell text-sm text-gray-500"><%= mov.motivo %></td>
                            <td class="table-cell text-right space-x-2 whitespace-nowrap">
                                <button class="btn-approve btn-primary !py-1 !px-3 text-sm" data-id="<%= mov.id %>">Aprovar</button>
                                <button class="btn-reject btn-danger !py-1 !px-3 text-sm" data-id="<%= mov.id %>">Rejeitar</button>
                            </td>
                        </tr>
                    <% }) %>
                     <% if (pendingMovements.length === 0) { %>
                        <tr>
                            <td colspan="6" class="table-cell text-center text-gray-500 py-6">Nenhuma solicitação pendente no momento.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', () => {
    const tabelaSolicitacoes = document.getElementById('pending-requests-tbody');

    tabelaSolicitacoes.addEventListener('click', async (event) => {
        const target = event.target;
        const movementId = target.dataset.id;
        let url = '';
        
        if (target.classList.contains('btn-approve')) {
            url = `/admin/movimentacoes/${movementId}/aprovar`;
        } else if (target.classList.contains('btn-reject')) {
            url = `/admin/movimentacoes/${movementId}/rejeitar`;
        } else {
            return;
        }

        if (!movementId || !url) return;

        target.disabled = true;
        
        try {
            const response = await fetch(url, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();

            if (!result.success) {
                throw new Error(result.message || 'Falha ao processar a solicitação.');
            }

            // Remove a linha da tabela para um feedback visual imediato
            const rowToRemove = document.getElementById(`mov-row-${movementId}`);
            if (rowToRemove) {
                rowToRemove.style.opacity = '0';
                setTimeout(() => rowToRemove.remove(), 300);
            }

        } catch (error) {
            console.error('Erro:', error);
            alert('Não foi possível processar a solicitação.');
            target.disabled = false;
        }
    });
});
</script>