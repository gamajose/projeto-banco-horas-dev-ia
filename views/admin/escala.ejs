<div class="page-header">
    <h1 class="page-title">
        <i class="fas fa-calendar-alt text-red-600 mr-3"></i>
        Gestão de Escalas
    </h1>
    <p class="page-description">Planeie os turnos, folgas e férias da sua equipa de forma visual e interativa.</p>
</div>

<div class="card mb-6">
    <div class="card-body flex flex-col sm:flex-row items-center justify-between gap-4">
        <div class="flex items-center space-x-2">
            <button id="prev-month-btn" class="btn-secondary btn-sm !py-2 !px-3"><i
                    class="fas fa-chevron-left"></i></button>
            <h2 id="current-month-year" class="text-xl font-bold text-gray-800 w-48 text-center"></h2>
            <button id="next-month-btn" class="btn-secondary btn-sm !py-2 !px-3"><i
                    class="fas fa-chevron-right"></i></button>
        </div>
        <div class="flex items-center flex-wrap gap-x-3 gap-y-2">
            <div class="flex items-center"><div class="w-3 h-3 bg-emerald-100 rounded-sm mr-1.5 border"></div><span class="text-xs">Trabalho</span></div>
            <div class="flex items-center"><div class="w-3 h-3 bg-red-100 rounded-sm mr-1.5 border"></div><span class="text-xs">Folga</span></div>
            <div class="flex items-center"><div class="w-3 h-3 bg-purple-100 rounded-sm mr-1.5 border"></div><span class="text-xs">Férias</span></div>
            <div class="flex items-center"><div class="w-3 h-3 bg-orange-100 rounded-sm mr-1.5 border"></div><span class="text-xs">Standby</span></div>
            <div class="flex items-center"><div class="w-3 h-3 bg-blue-100 rounded-sm mr-1.5 border"></div><span class="text-xs">Feriado</span></div>
            <div class="flex items-center"><div class="w-3 h-3 bg-gray-100 rounded-sm mr-1.5 border"></div><span class="text-xs">Fim de Semana</span></div>
        </div>
        <div>
            <button id="open-ferias-modal-btn" class="btn-primary btn-sm">
                <i class="fas fa-plane-departure mr-2"></i> Lançar Férias
            </button>
            <button id="export-pdf-btn" class="btn-secondary btn-sm">
                <i class="fas fa-file-pdf mr-2"></i> Exportar PDF
            </button>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body p-0">
        <div id="escala-container" class="table-container overflow-x-auto">
            <div class="p-12 text-center text-gray-500">
                <i class="fas fa-spinner fa-spin text-3xl"></i>
                <p class="mt-2">A carregar escala...</p>
            </div>
        </div>
    </div>
</div>

<div id="escala-modal"
    class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-2xl shadow-xl w-full max-w-md transform transition-all opacity-0 -translate-y-4">
        <div class="p-6">
            <div class="flex justify-between items-start">
                <div>
                    <h3 class="text-xl font-bold text-gray-900">Definir Escala</h3>
                    <p id="escala-modal-subtitle" class="text-sm text-gray-500 mt-1"></p>
                </div>
                <button id="escala-modal-close" class="text-gray-400 hover:text-gray-600 text-2xl">&times;</button>
            </div>
        </div>
        <form id="escala-form" class="p-6 pt-0 space-y-4">
            <input type="hidden" id="escala-perfil-id">
            <input type="hidden" id="escala-data">
            <div>
                <label for="escala-tipo" class="form-label">Tipo de Escala</label>
                <select id="escala-tipo" class="form-input">
                    <option value="Trabalho">Trabalho</option>
                    <option value="Folga">Folga</option>
                    <option value="Standby">Standby</option>
                    <option value="Férias">Férias</option>
                </select>
            </div>
            <div id="horario-container" class="grid grid-cols-2 gap-4">
                <div>
                    <label for="escala-hora-inicio" class="form-label">Início</label>
                    <input type="time" id="escala-hora-inicio" class="form-input">
                </div>
                <div>
                    <label for="escala-hora-fim" class="form-label">Fim</label>
                    <input type="time" id="escala-hora-fim" class="form-input">
                </div>
            </div>
            <div>
                <label for="escala-observacoes" class="form-label">Observações</label>
                <textarea id="escala-observacoes" rows="2" class="form-input"></textarea>
            </div>
        </form>
        <div class="px-6 py-4 bg-gray-50/50 rounded-b-2xl flex justify-end items-center space-x-3">
            <button id="escala-delete-btn" type="button" class="btn-danger !py-2">Remover</button>
            <button id="escala-cancel-btn" type="button" class="btn-secondary !py-2">Cancelar</button>
            <button id="escala-save-btn" type="button" class="btn-primary !py-2">Salvar</button>
        </div>
    </div>
</div>


<%- include('../partials/modal-ferias', { colaboradores: colaboradores }) %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- CONFIGURAÇÕES E ESTADO ---
            const colaboradores = <%- JSON.stringify(colaboradores) %>;
            let currentDate = new Date();
            let currentEscalas = [];
            let currentAniversariantes = [];

            // Feriados Nacionais Fixos do Brasil (simplificado)
            const feriados = {
                '1-1': 'Ano Novo',
                '4-18': 'Paixão de Cristo',
                '4-21': 'Tiradentes',
                '5-1': 'Dia do Trabalho',
                '9-7': 'Independência do Brasil',
                '10-12': 'Nossa Senhora Aparecida',
                '11-2': 'Finados',
                '11-15': 'Proclamação da República',
                '11-20': 'Consciência Negra',
                '12-25': 'Natal'
            };

            // --- ELEMENTOS DO DOM ---
            const container = document.getElementById('escala-container');
            const monthYearEl = document.getElementById('current-month-year');
            const prevBtn = document.getElementById('prev-month-btn');
            const nextBtn = document.getElementById('next-month-btn');
            const modal = document.getElementById('escala-modal');
            const modalContent = modal.querySelector('.transform');
            const modalSubtitle = document.getElementById('escala-modal-subtitle');
            const tipoSelect = document.getElementById('escala-tipo');
            const horarioContainer = document.getElementById('horario-container');

            const exportPdfBtn = document.getElementById('export-pdf-btn');

            // Função principal para renderizar toda a grelha
            const renderEscala = () => {
                const ano = currentDate.getFullYear();
                const mes = currentDate.getMonth(); // 0-11
                monthYearEl.textContent = `${currentDate.toLocaleString('pt-BR', { month: 'long' })} de ${ano}`.replace(/^\w/, c => c.toUpperCase());

                const diasNoMes = new Date(ano, mes + 1, 0).getDate();

                // --- PARTE 1: CONSTRUIR O CABEÇALHO ---
                let headerHtml = `<th class="sticky left-0 bg-gray-50 z-10 p-2 text-left text-sm font-semibold text-gray-800 w-48 min-w-48">Colaborador</th>`;
                for (let dia = 1; dia <= diasNoMes; dia++) {
                    const data = new Date(ano, mes, dia);
                    const diaSemana = data.toLocaleDateString('pt-BR', { weekday: 'short' }).substring(0, 3);
                    const isWeekend = [0, 6].includes(data.getDay());
                    headerHtml += `<th class="p-1 md:p-2 text-center text-xs md:text-sm font-medium ${isWeekend ? 'bg-gray-200' : 'bg-gray-50'}"><div class="w-8 md:w-10">${diaSemana}</div><div>${dia}</div></th>`;
                }

                // --- PARTE 2: CONSTRUIR O CORPO DA TABELA ---
                let bodyHtml = '';
                colaboradores.forEach(colab => {
                    bodyHtml += `<tr><td class="sticky left-0 bg-white z-10 p-1 md:p-2 border-b whitespace-nowrap"><div class="font-semibold text-sm">${colab.first_name} ${colab.last_name}</div><div class="text-xs text-gray-500">${colab.funcao || 'N/D'}</div></td>`;
                    for (let dia = 1; dia <= diasNoMes; dia++) {
                        const data = new Date(ano, mes, dia);
                        const dataStr = `${ano}-${(mes + 1).toString().padStart(2, '0')}-${dia.toString().padStart(2, '0')}`;
                        const escalaDoDia = currentEscalas.find(e => e.perfil_id === colab.id && e.data.startsWith(dataStr));
                        const isAniversario = currentAniversariantes.some(a => a.perfil_id === colab.id && a.dia === dia);
                        const isFeriado = feriados[`${mes + 1}-${dia}`];

                        let cellClass = 'border-b p-1 md:p-2 text-center cursor-pointer hover:bg-red-50 transition-colors relative h-14';
                        let cellContent = '';
                        let cellTitle = 'Definir escala';

                        if (isAniversario) cellClass += ' bg-pink-100';
                        else if (isFeriado && !escalaDoDia) cellClass += ' bg-yellow-100';
                        else if ([0, 6].includes(data.getDay()) && !escalaDoDia) cellClass += ' bg-gray-100';

                        if (isAniversario) {
                            cellContent += `<i class="fas fa-birthday-cake text-pink-500 absolute top-1 right-1 text-xs" title="Aniversário!"></i>`;
                        }

                        if (escalaDoDia) {
                            switch (escalaDoDia.tipo_escala) {
                                case 'Trabalho':
                                    cellClass += ' bg-emerald-50';
                                    cellContent += `<div class="font-mono text-2xs md:text-xs">${escalaDoDia.hora_inicio || ''} - ${escalaDoDia.hora_fim || ''}</div>`;
                                    cellTitle = `Trabalho: ${escalaDoDia.hora_inicio}-${escalaDoDia.hora_fim}`;
                                    break;
                                case 'Folga':
                                    cellClass += ' bg-blue-100';
                                    cellContent += `<div class="font-bold text-blue-800">F</div>`;
                                    cellTitle = 'Folga';
                                    break;
                                case 'Férias':
                                    cellClass += ' bg-purple-100';
                                    cellContent += `<div class="font-bold text-purple-800">FR</div>`;
                                    cellTitle = 'Férias';
                                    break;
                                case 'Standby':
                                    cellClass += ' bg-orange-100';
                                    cellContent += `<div class="font-bold text-orange-800">ST</div>`;
                                    cellTitle = 'Standby';
                                    break;
                            }
                        } else if (isFeriado) {
                            cellContent += `<div class="flex flex-col items-center justify-center h-full"><span class="font-bold text-yellow-800 text-xs">FD</span><span class="text-[10px] text-yellow-600 hidden sm:block">${feriados[`${mes + 1}-${dia}`]}</span></div>`;
                            cellTitle = feriados[`${mes + 1}-${dia}`];
                        }

                        bodyHtml += `<td title="${cellTitle}" class="${cellClass}" data-perfil-id="${colab.id}" data-data="${dataStr}" data-nome="${colab.first_name} ${colab.last_name}">${cellContent}</td>`;
                    }
                    bodyHtml += '</tr>';
                });
                // --- PARTE 3: MONTAR A TABELA FINAL ---
                container.innerHTML = `<table class="min-w-full text-xs"><thead><tr>${headerHtml}</tr></thead><tbody>${bodyHtml}</tbody></table>`;
            };

            // Carrega os dados da API para o mês atual
            const carregarDadosEscala = async () => {
                container.innerHTML = `<div class="p-12 text-center text-gray-500"><i class="fas fa-spinner fa-spin text-3xl"></i><p class="mt-2">A carregar escala...</p></div>`;
                const ano = currentDate.getFullYear();
                const mes = currentDate.getMonth() + 1;
                try {
                    const response = await fetch(`/admin/escala/api?ano=${ano}&mes=${mes}`);
                    const result = await response.json();
                    if (result.success) {
                        currentEscalas = result.escalas;
                        currentAniversariantes = result.aniversariantes;
                        renderEscala();
                    } else {
                        throw new Error(result.message);
                    }
                } catch (error) {
                    container.innerHTML = `<div class="p-12 text-center text-red-500">${error.message}</div>`;
                }
            };

            // --- LÓGICA DO MODAL ---
            const openModal = (perfilId, data, nome) => {
                document.getElementById('escala-perfil-id').value = perfilId;
                document.getElementById('escala-data').value = data;
                modalSubtitle.textContent = `${nome} - ${new Date(data + 'T00:00:00').toLocaleDateString('pt-BR')}`;

                const escalaExistente = currentEscalas.find(e => e.perfil_id == perfilId && e.data.startsWith(data));
                if (escalaExistente) {
                    tipoSelect.value = escalaExistente.tipo_escala;
                    document.getElementById('escala-hora-inicio').value = escalaExistente.hora_inicio || '';
                    document.getElementById('escala-hora-fim').value = escalaExistente.hora_fim || '';
                    document.getElementById('escala-observacoes').value = escalaExistente.observacoes || '';
                } else {
                    document.getElementById('escala-form').reset();
                    tipoSelect.value = 'Trabalho';
                }

                horarioContainer.style.display = tipoSelect.value === 'Trabalho' ? 'grid' : 'none';
                modal.classList.remove('hidden');
                setTimeout(() => modalContent.classList.remove('opacity-0', '-translate-y-4'), 10);
            };

            const closeModal = () => {
                modalContent.classList.add('opacity-0', '-translate-y-4');
                setTimeout(() => modal.classList.add('hidden'), 300);
            };

            // --- EVENT LISTENERS ---
            prevBtn.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() - 1);
                carregarDadosEscala();
            });

            nextBtn.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() + 1);
                carregarDadosEscala();
            });

            container.addEventListener('click', (e) => {
                const cell = e.target.closest('td[data-perfil-id]');
                if (cell) {
                    openModal(cell.dataset.perfilId, cell.dataset.data, cell.dataset.nome);
                }
            });

            tipoSelect.addEventListener('change', () => {
                horarioContainer.style.display = tipoSelect.value === 'Trabalho' ? 'grid' : 'none';
            });

            //jose
            modal.querySelector('#escala-modal-close').addEventListener('click', closeModal);
            modal.querySelector('#escala-cancel-btn').addEventListener('click', closeModal);

            modal.querySelector('#escala-save-btn').addEventListener('click', async () => {
                const data = {
                    perfil_id: document.getElementById('escala-perfil-id').value,
                    data: document.getElementById('escala-data').value,
                    tipo_escala: tipoSelect.value,
                    hora_inicio: document.getElementById('escala-hora-inicio').value,
                    hora_fim: document.getElementById('escala-hora-fim').value,
                    observacoes: document.getElementById('escala-observacoes').value,
                };

                try {
                    const response = await fetch('/admin/escala/api', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    const result = await response.json();
                    if (!result.success) throw new Error(result.message);

                    showNotification('Escala salva com sucesso!', 'success');
                    closeModal();
                    carregarDadosEscala();
                } catch (error) {
                    showNotification(`Erro: ${error.message}`, 'error');
                }
            });

            modal.querySelector('#escala-delete-btn').addEventListener('click', async () => {
                if (!confirm('Tem certeza que deseja remover esta escala?')) return;
                const data = {
                    perfil_id: document.getElementById('escala-perfil-id').value,
                    data: document.getElementById('escala-data').value,
                };

                try {
                    const response = await fetch('/admin/escala/api', {
                        method: 'DELETE',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    const result = await response.json();
                    if (!result.success) throw new Error(result.message);

                    showNotification('Escala removida com sucesso!', 'success');
                    closeModal();
                    carregarDadosEscala();
                } catch (error) {
                    showNotification(`Erro: ${error.message}`, 'error');
                }
            });


            // --- LÓGICA DO MODAL DE FÉRIAS ---
            const feriasModal = document.getElementById('ferias-modal');
            const openFeriasBtn = document.getElementById('open-ferias-modal-btn');
            const feriasModalContent = feriasModal.querySelector('.transform');

            openFeriasBtn.addEventListener('click', () => {
                feriasModal.classList.remove('hidden');
                setTimeout(() => feriasModalContent.classList.remove('opacity-0', '-translate-y-4'), 10);
            });

            const closeFeriasModal = () => {
                feriasModalContent.classList.add('opacity-0', '-translate-y-4');
                setTimeout(() => feriasModal.classList.add('hidden'), 300);
            };

            feriasModal.querySelector('#ferias-modal-close').addEventListener('click', closeFeriasModal);
            feriasModal.querySelector('#ferias-cancel-btn').addEventListener('click', closeFeriasModal);

            feriasModal.querySelector('#ferias-save-btn').addEventListener('click', async () => {
                const data = {
                    perfil_id: document.getElementById('ferias-perfil-id').value,
                    data_inicio: document.getElementById('ferias-data-inicio').value,
                    data_fim: document.getElementById('ferias-data-fim').value,
                };

                if (!data.perfil_id || !data.data_inicio || !data.data_fim) {
                    showNotification('Por favor, preencha todos os campos.', 'error');
                    return;
                }

                try {
                    const response = await fetch('/admin/escala/api/ferias', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    const result = await response.json();
                    if (!result.success) throw new Error(result.message);

                    showNotification('Férias lançadas com sucesso!', 'success');
                    closeFeriasModal();
                    carregarDadosEscala(); // Atualiza a grelha principal
                } catch (error) {
                    showNotification(`Erro: ${error.message}`, 'error');
                }
            });

            exportPdfBtn.addEventListener('click', () => {
                const ano = currentDate.getFullYear();
                const mes = currentDate.getMonth() + 1;
                const url = `/admin/escala/exportar-pdf?ano=${ano}&mes=${mes}`;
                window.open(url, '_blank');
            });


            // --- INICIALIZAÇÃO ---
            carregarDadosEscala();
        });
    </script>