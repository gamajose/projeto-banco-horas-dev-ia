<div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-800">Dashboard do Administrador</h1>
        <p class="text-gray-600">Visão geral do sistema de banco de horas.</p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex flex-col justify-between">
            <div>
                <h3 class="text-lg font-medium text-gray-500">Total de Usuários</h3>
                <p class="text-3xl font-bold mt-2 text-gray-800"><%= totalUsers %></p>
            </div>
            <a href="/admin/colaboradores" class="text-blue-600 hover:underline mt-4 font-semibold">Gerenciar Usuários</a>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex flex-col justify-between">
            <div>
                <h3 class="text-lg font-medium text-gray-500">Movimentações Totais</h3>
                <p id="total-movements-count" class="text-3xl font-bold mt-2 text-gray-800"><%= stats.total %></p>
            </div>
            <a href="/admin/relatorios" class="text-blue-600 hover:underline mt-4 font-semibold">Ver Relatórios</a>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex flex-col justify-between">
            <div>
                <h3 class="text-lg font-medium text-gray-500">Horas Aprovadas</h3>
                <p id="approved-hours-count" class="text-3xl font-bold mt-2 text-green-600"><%= stats.aprovadas %></p>
            </div>
            <a href="/admin/relatorios" class="text-blue-600 hover:underline mt-4 font-semibold">Ver Detalhes</a>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex flex-col justify-between">
            <div>
                <h3 class="text-lg font-medium text-gray-500">Solicitações Pendentes</h3>
                <p id="pending-requests-count" class="text-3xl font-bold mt-2 text-yellow-600"><%= stats.pendentes %></p>
            </div>
            <a href="/admin/movimentacoes/pendentes" class="text-blue-600 hover:underline mt-4 font-semibold">Analisar Solicitações</a>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <div class="lg:col-span-2">
            <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200">
                <h2 class="text-2xl font-bold text-gray-800 mb-4">Aprovar Solicitações</h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="table-header">Colaborador</th>
                                <th class="table-header">Setor</th>
                                <th class="table-header">Data</th>
                                <th class="table-header">Horas</th>
                                <th class="table-header text-right">Ações</th>
                            </tr>
                        </thead>
                        <tbody id="pending-requests-tbody" class="bg-white divide-y divide-gray-200">
                            <% pendingMovements.forEach(mov => { %>
                                <tr id="mov-row-<%= mov.id %>">
                                    <td class="table-cell font-medium text-gray-900"><%= mov.colaborador_nome %></td>
                                    <td class="table-cell text-gray-500"><%= mov.setor_nome %></td>
                                    <td class="table-cell"><%= new Date(mov.data_movimentacao).toLocaleDateString('pt-BR', {timeZone: 'UTC'}) %></td>
                                    <td class="table-cell font-mono <%= mov.entrada ? 'text-green-600' : 'text-red-600' %>"><%= mov.entrada ? '+' : '-' %><%= mov.hora_total %></td>
                                    <td class="table-cell text-right space-x-2 whitespace-nowrap">
                                        <button class="btn-approve btn-primary !py-1 !px-3 text-sm" data-id="<%= mov.id %>">Aprovar</button>
                                        <button class="btn-reject btn-danger !py-1 !px-3 text-sm" data-id="<%= mov.id %>">Rejeitar</button>
                                    </td>
                                </tr>
                            <% }) %>
                            <% if (pendingMovements.length === 0) { %>
                                <tr>
                                    <td colspan="5" class="table-cell text-center text-gray-500 py-6">Nenhuma solicitação pendente.</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="lg:col-span-1">
            <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200">
                <h2 class="text-2xl font-bold text-gray-800 mb-4">Resumo por Setor</h2>
                <div id="resumo-setor-list" class="space-y-1">
                    <% departmentStats.forEach(dept => { %>
                        <a href="#" class="sector-details-trigger flex justify-between items-center p-2 rounded-md hover:bg-gray-50" data-sector-id="<%= dept.id %>" data-sector-name="<%= dept.nome %>">
                            <span class="text-gray-700"><%= dept.nome %></span>
                            <span class="font-semibold text-gray-800 bg-gray-100 px-2 py-1 rounded-md text-sm"><%= dept.total_colaboradores %> Colaboradores</span>
                        </a>
                    <% }) %>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="sector-modal" class="fixed inset-0 bg-gray-600 bg-opacity-75 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-full max-w-lg shadow-lg rounded-md bg-white">
        <div class="flex justify-between items-center pb-3 border-b">
            <h3 id="sector-modal-title" class="text-2xl font-bold text-gray-800">Colaboradores</h3>
            <button id="sector-modal-close" class="text-gray-400 hover:text-gray-600 text-3xl font-bold">&times;</button>
        </div>
        <div class="mt-4 max-h-96 overflow-y-auto">
            <ul id="sector-modal-list" class="space-y-3">
                </ul>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // --- REFERÊNCIAS AOS ELEMENTOS ---
    const pendingCountEl = document.getElementById('pending-requests-count');
    const totalMovementsEl = document.getElementById('total-movements-count');
    const approvedHoursEl = document.getElementById('approved-hours-count');
    const pendingTableBody = document.getElementById('pending-requests-tbody');
    const resumoPorSetorList = document.getElementById('resumo-setor-list');
    const sectorModal = document.getElementById('sector-modal');
    const sectorModalTitle = document.getElementById('sector-modal-title');
    const sectorModalList = document.getElementById('sector-modal-list');
    const sectorModalCloseBtn = document.getElementById('sector-modal-close');
    const intervalTime = 1000;

    // --- FUNÇÕES AUXILIARES ---
    const createMovementRowHTML = (mov) => {
        const dataFormatada = new Date(mov.data_movimentacao).toLocaleDateString('pt-BR', { timeZone: 'UTC' });
        return `
            <tr id="mov-row-${mov.id}">
                <td class="table-cell font-medium">${mov.colaborador_nome}</td>
                <td class="table-cell">${mov.setor_nome}</td>
                <td class="table-cell">${dataFormatada}</td>
                <td class="table-cell font-mono ${mov.entrada ? 'text-green-600' : 'text-red-600'}">${mov.entrada ? '+' : '-'}${mov.hora_total}</td>
                <td class="table-cell text-right space-x-2">
                    <button class="btn-approve btn-primary !py-1 !px-3 text-sm" data-id="${mov.id}">Aprovar</button>
                    <button class="btn-reject btn-danger !py-1 !px-3 text-sm" data-id="${mov.id}">Rejeitar</button>
                </td>
            </tr>`;
    };

    const fetchAndUpdateDashboard = async () => {
        try {
            const response = await fetch('/admin/api/dashboard-stats');
            const data = await response.json();
            if (data.success) {
                if (pendingCountEl) pendingCountEl.textContent = data.stats.pendentes;
                if (totalMovementsEl) totalMovementsEl.textContent = data.stats.total;
                if (approvedHoursEl) approvedHoursEl.textContent = data.stats.aprovadas;
                if (pendingTableBody) {
                    pendingTableBody.innerHTML = ''; 
                    if (data.pendingMovements.length === 0) {
                        pendingTableBody.innerHTML = '<tr><td colspan="5" class="table-cell text-center text-gray-500 py-6">Nenhuma solicitação pendente.</td></tr>';
                    } else {
                        data.pendingMovements.forEach(mov => {
                            pendingTableBody.innerHTML += createMovementRowHTML(mov);
                        });
                    }
                }
            }
        } catch (error) { console.error('Erro ao atualizar o dashboard:', error); }
    };

    // --- LÓGICA DE EVENTOS ---
    if (pendingTableBody) {
        pendingTableBody.addEventListener('click', async (event) => {
            const target = event.target;
            const movementId = target.dataset.id;
            let url = '';
            if (target.classList.contains('btn-approve')) url = `/admin/movimentacoes/${movementId}/aprovar`;
            else if (target.classList.contains('btn-reject')) url = `/admin/movimentacoes/${movementId}/rejeitar`;
            else return;
            target.disabled = true;
            try {
                const response = await fetch(url, { method: 'PATCH' });
                const result = await response.json();
                if (!result.success) throw new Error(result.message);
                fetchAndUpdateDashboard();
            } catch (error) {
                console.error('Erro:', error);
                alert('Não foi possível processar a solicitação.');
                target.disabled = false;
            }
        });
    }

    const openSectorModal = () => sectorModal.classList.remove('hidden');
    const closeSectorModal = () => sectorModal.classList.add('hidden');
    if (resumoPorSetorList) {
        resumoPorSetorList.addEventListener('click', async (event) => {
            const trigger = event.target.closest('.sector-details-trigger');
            if (trigger) {
                event.preventDefault();
                const sectorId = trigger.dataset.sectorId;
                const sectorName = trigger.dataset.sectorName;
                sectorModalTitle.textContent = `Colaboradores em ${sectorName}`;
                sectorModalList.innerHTML = `<li class="text-gray-500">A carregar...</li>`;
                openSectorModal();
                try {
                    const response = await fetch(`/api/v1/profiles?setor_id=${sectorId}`);
                    const result = await response.json();
                    if (result.success && result.profiles.length > 0) {
                        sectorModalList.innerHTML = '';
                        result.profiles.forEach(profile => {
                            const listItem = document.createElement('li');
                            listItem.className = 'flex items-center space-x-3 p-2';
                            listItem.innerHTML = `
                                <img class="h-8 w-8 rounded-full object-cover" src="${profile.foto_url || '/images/default-avatar.png'}" alt="Foto de ${profile.nome}">
                                <div><p class="font-medium text-gray-800">${profile.nome}</p><p class="text-sm text-gray-500">${profile.email}</p></div>`;
                            sectorModalList.appendChild(listItem);
                        });
                    } else {
                        sectorModalList.innerHTML = `<li class="text-gray-500">Nenhum colaborador encontrado neste setor.</li>`;
                    }
                } catch (error) {
                    sectorModalList.innerHTML = `<li class="text-red-500">Não foi possível carregar os colaboradores.</li>`;
                }
            }
        });
    }
    if (sectorModalCloseBtn) sectorModalCloseBtn.addEventListener('click', closeSectorModal);
    window.addEventListener('keydown', (event) => {
        if (event.key === 'Escape') closeSectorModal();
    });

    setInterval(fetchAndUpdateDashboard, intervalTime);
});
</script>